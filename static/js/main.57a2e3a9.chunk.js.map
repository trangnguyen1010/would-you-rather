{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/authedUser.js","actions/shared.js","assets/logo.svg","components/Login.js","components/SiteWrapper.js","components/HomePage.js","components/PollQuestionAnswer.js","components/PollQuestionResult.js","components/PollQuestion.js","components/PollQuestionNew.js","components/Leaderboard.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","console","log","_saveQuestionAnswer","RECEIVE_USERS","SAVE_ANSWER_TO_AUTHED_USER","SAVE_QUESTION_TO_AUTHED_USER","RECEIVE_QUESTIONS","SAVE_ANSWER","ADD_QUESTION","SET_AUTHED_USER","setAuthedUser","type","AUTHED_ID","localStorage","getItem","handleInitialData","dispatch","showLoading","all","then","receiveUsers","receiveQuestions","handleAddQuestion","getState","addQuestion","handleSaveAnswer","saveAnswer","saveAnswerToAutheduser","Login","state","handleChange","e","preventDefault","target","value","toLowerCase","split","join","setState","handleAuthedUser","props","prevRoutePath","undefined","location","previous","pathname","history","push","this","className","Col","src","logo","alt","autoComplete","Group","label","Select","onChange","position","default","disabled","defaultValue","map","user","block","color","onClick","Component","withRouter","connect","Object","values","SiteWrapper","logOut","login","loginLink","navBarItems","to","icon","LinkComponent","NavLink","useExact","accountDropdownOptions","options","Wrapper","headerProps","imageURL","navItems","Item","accountDropdown","navProps","itemsObjects","Row","sm","md","offsetMd","offsetLg","children","ANSWERED","UNANSWERED","HomePage","questionList","changeQuestionList","textContent","includes","answered","unanswered","Container","lg","Button","xs","Card","Body","size","sort","a","b","getTime","keys","assign","filter","PollQuestionAnswer","option","error","handleSubmit","onSubmit","Form","Label","Switch","PollQuestionResult","totalVotes","length","selected","percent1","percent2","Small","muted","ProgressBar","toFixed","variant","PollQuestion","questionAnswered","Content","match","params","PollQuestionNew","redirect","Control","placeholder","Text","Leaderboard","Header","Title","Table","striped","bordered","index","Badge","PrivateRoute","component","rest","render","App","loading","exact","path","unansweredIds","answeredIds","combineReducers","action","logger","store","next","group","result","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.57a2e3a9.chunk.js","sourcesContent":["let users = {\r\n  sarahedo: {\r\n    id: \"sarahedo\",\r\n    name: \"Sarah Edo\",\r\n    avatarURL:\r\n      \"https://cangir.github.io/udacity-reactnd-would-you-rather/img/man-1.svg\",\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\r\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\r\n    },\r\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\r\n  },\r\n  tylermcginnis: {\r\n    id: \"tylermcginnis\",\r\n    name: \"Tyler McGinnis\",\r\n    avatarURL:\r\n      \"https://cangir.github.io/udacity-reactnd-would-you-rather/img/girl.svg\",\r\n    answers: {\r\n      vthrdm985a262al8qx3do: \"optionOne\",\r\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\r\n    },\r\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\r\n  },\r\n  johndoe: {\r\n    id: \"johndoe\",\r\n    name: \"John Doe\",\r\n    avatarURL:\r\n      \"https://cangir.github.io/udacity-reactnd-would-you-rather/img/boy-1.svg\",\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: \"optionOne\",\r\n      vthrdm985a262al8qx3do: \"optionTwo\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n    },\r\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\r\n  },\r\n};\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: \"8xf0y6ziyjabvozdd253nd\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"have horrible short term memory\",\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: \"have horrible long term memory\",\r\n    },\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: \"6ni6ok3ym7mf1p33lnez\",\r\n    author: \"johndoe\",\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"become a superhero\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\", \"sarahedo\"],\r\n      text: \"become a supervillain\",\r\n    },\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: \"am8ehyc8byjqgar0jgpub9\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be telekinetic\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be telepathic\",\r\n    },\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: \"loxhs1bqm25b708cmbf3g\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be a front-end developer\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be a back-end developer\",\r\n    },\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: \"vthrdm985a262al8qx3do\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"find $50 yourself\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\"],\r\n      text: \"have your best friend find $500\",\r\n    },\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: \"xj352vofupe1dqz9emx13r\",\r\n    author: \"johndoe\",\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: [\"johndoe\"],\r\n      text: \"write JavaScript\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"write Swift\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random().toString(36).substring(2, 15) +\r\n    Math.random().toString(36).substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), 1000);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), 1000);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    },\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion,\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n        },\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer,\r\n          },\r\n        },\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser]),\r\n          },\r\n        },\r\n      };\r\n      console.log(\"API file: \", users);\r\n\r\n      res();\r\n    }, 500);\r\n  });\r\n}\r\n","import {\r\n  _getUsers,\r\n  _getQuestions,\r\n  _saveQuestion,\r\n  _saveQuestionAnswer,\r\n} from \"./_DATA\";\r\n\r\nexport function getInitialData() {\r\n  return Promise.all([_getUsers(), _getQuestions()]).then(\r\n    ([users, questions]) => ({\r\n      users,\r\n      questions,\r\n    })\r\n  );\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n  return _saveQuestion(question);\r\n}\r\n\r\nexport function saveQuestionAnswer(info) {\r\n  return _saveQuestionAnswer(info);\r\n}\r\n","export const RECEIVE_USERS = \"RECEIVE_USERS\";\r\nexport const SAVE_ANSWER_TO_AUTHED_USER = \"SAVE_ANSWER_TO_AUTHED_USER\";\r\nexport const SAVE_QUESTION_TO_AUTHED_USER = \"SAVE_QUESTION_TO_AUTHED_USER\";\r\n\r\nexport function receiveUsers(users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users,\r\n  };\r\n}\r\n\r\nexport function saveQuestionToAuthedUser(authedUser, id) {\r\n  return {\r\n    type: SAVE_QUESTION_TO_AUTHED_USER,\r\n    authedUser,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function saveAnswerToAutheduser(authedUser, id, answer) {\r\n  return {\r\n    type: SAVE_ANSWER_TO_AUTHED_USER,\r\n    authedUser,\r\n    id,\r\n    answer,\r\n  };\r\n}\r\n","export const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\r\nexport const SAVE_ANSWER = \"SAVE_ANSWER\";\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions,\r\n  };\r\n}\r\n\r\nexport function addQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    question,\r\n  };\r\n}\r\n\r\nexport function saveAnswer(id, answer, authedUser) {\r\n  console.log(\"action-question page: \", authedUser);\r\n  return {\r\n    type: SAVE_ANSWER,\r\n    id,\r\n    answer,\r\n    authedUser,\r\n  };\r\n}\r\n","export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\r\n\r\nexport function setAuthedUser(id) {\r\n  return {\r\n    type: SET_AUTHED_USER,\r\n    id,\r\n  };\r\n}\r\n","import { getInitialData, saveQuestion, saveQuestionAnswer } from \"../utils/api\";\r\nimport {\r\n  receiveUsers,\r\n  saveAnswerToAutheduser,\r\n  saveQuestionToAuthedUser,\r\n} from \"./users\";\r\nimport { addQuestion, receiveQuestions, saveAnswer } from \"./questions\";\r\nimport { showLoading } from \"react-redux-loading\";\r\nimport { setAuthedUser } from \"./authedUser\";\r\n\r\nlet AUTHED_ID = localStorage.getItem(\"loggedInUser\");\r\nif (AUTHED_ID === null) {\r\n  AUTHED_ID = null;\r\n}\r\nexport function handleInitialData() {\r\n  return (dispatch) => {\r\n    dispatch(showLoading());\r\n    return getInitialData().then(({ users, questions }) => {\r\n      dispatch(receiveUsers(users));\r\n      dispatch(receiveQuestions(questions));\r\n      dispatch(setAuthedUser(AUTHED_ID));\r\n    });\r\n  };\r\n}\r\n\r\nexport function handleAddQuestion(optionOneText, optionTwoText) {\r\n  return (dispatch, getState) => {\r\n    const { setAuthedUser } = getState();\r\n    return saveQuestion({\r\n      optionOneText,\r\n      optionTwoText,\r\n      author: setAuthedUser,\r\n    }).then((question) => {\r\n      dispatch(addQuestion(question));\r\n      dispatch(saveQuestionToAuthedUser(setAuthedUser, question.id));\r\n    });\r\n  };\r\n}\r\n\r\nexport function handleSaveAnswer(id, answer) {\r\n  return (dispatch, getState) => {\r\n    const { setAuthedUser } = getState();\r\n    console.log(\"Shared page: \", setAuthedUser, id, answer);\r\n    return saveQuestionAnswer({ authedUser: setAuthedUser, qid: id, answer })\r\n      .then(dispatch(saveAnswer(id, answer, setAuthedUser)))\r\n      .then(dispatch(saveAnswerToAutheduser(setAuthedUser, id, answer)));\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.eaec2a7c.svg\";","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthedUser } from \"../actions/authedUser\";\r\nimport { Grid, Form, Button, Text, Page } from \"tabler-react\";\r\nimport logo from \"../assets/logo.svg\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    authedUser: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    let authedUser = e.target.value;\r\n    authedUser = authedUser.toLowerCase().split(\" \").join(\"\");\r\n    this.setState({ authedUser: authedUser });\r\n  };\r\n\r\n  handleAuthedUser = () => {\r\n    this.props.dispatch(setAuthedUser(this.state.authedUser));\r\n\r\n    let prevRoutePath =\r\n      this.props.location.state !== undefined\r\n        ? this.props.location.state.previous.pathname\r\n        : null;\r\n\r\n    prevRoutePath\r\n      ? this.props.history.push(prevRoutePath)\r\n      : this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n    console.log(\"Logg page: \", this.state.authedUser);\r\n\r\n    return (\r\n      <Page>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Grid.Col>\r\n              <div className=\"text-center mb-6\">\r\n                <img src={logo} alt=\"logo\" />\r\n              </div>\r\n              <div>\r\n                <Form className=\"card\" autoComplete=\"off\">\r\n                  <div>\r\n                    <div>\r\n                      <p>Login to your account</p>\r\n                    </div>\r\n                    <div>\r\n                      <Form.Group label=\"Select User  \">\r\n                        <Form.Select\r\n                          onChange={this.handleChange}\r\n                          value={this.state.authedUser}\r\n                          position=\"append\"\r\n                        >\r\n                          <option value=\"\" default disabled defaultValue>\r\n                            Select User{\" \"}\r\n                          </option>\r\n                          {users.map((user) => (\r\n                            <option key={user.name}>{user.name}</option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                      <Button\r\n                        block\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleAuthedUser}\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Grid.Col>\r\n          </div>\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ setAuthedUser, users }) {\r\n  return {\r\n    users: Object.values(users),\r\n    authedUser: setAuthedUser,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Login));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { Grid, Nav, Site } from \"tabler-react\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport { setAuthedUser } from \"../actions/authedUser\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass SiteWrapper extends Component {\r\n  logOut = () => {\r\n    this.props.dispatch(setAuthedUser(null));\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  login = () => {\r\n    this.props.history.push(\"/login\");\r\n  };\r\n  render() {\r\n    const { authedUser, users } = this.props;\r\n\r\n    const navBarItems = authedUser\r\n      ? [\r\n          {\r\n            value: \"Home\",\r\n            to: \"/\",\r\n            icon: \"home\",\r\n            LinkComponent: NavLink,\r\n            useExact: true,\r\n          },\r\n          {\r\n            value: \"Leaderboard\",\r\n            to: \"/leaderboard\",\r\n            icon: \"award\",\r\n            LinkComponent: NavLink,\r\n            useExact: true,\r\n          },\r\n          {\r\n            value: \"Add Question\",\r\n            to: \"/add\",\r\n            icon: \"plus-circle\",\r\n            LinkComponent: NavLink,\r\n            useExact: true,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n    const accountDropdownOptions = authedUser\r\n      ? {\r\n          name: users[authedUser].name,\r\n          options: [\r\n            {\r\n              value: \"Sign Out\",\r\n              onClick: () => this.logOut(),\r\n            },\r\n          ],\r\n        }\r\n      : false;\r\n\r\n    let loginLink;\r\n\r\n    if (!authedUser) {\r\n      loginLink = <NavLink to=\"login\">SIGN IN</NavLink>;\r\n    } else {\r\n      loginLink = false;\r\n    }\r\n    return (\r\n      <Site.Wrapper\r\n        headerProps={{\r\n          alt: \"Would you rather\",\r\n          imageURL: logo,\r\n          navItems: (\r\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\r\n              {loginLink}\r\n            </Nav.Item>\r\n          ),\r\n          accountDropdown: accountDropdownOptions,\r\n        }}\r\n        navProps={{ itemsObjects: navBarItems }}\r\n      >\r\n        <div className=\"my-3 my-md-5\">\r\n          <div className=\"container\">\r\n            <Grid.Row>\r\n              <Grid.Col sm={12} md={10} offsetMd={1} offsetLg={2}>\r\n                {this.props.children}\r\n              </Grid.Col>\r\n            </Grid.Row>\r\n          </div>\r\n        </div>\r\n      </Site.Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ setAuthedUser, users }) {\r\n  return {\r\n    authedUser: setAuthedUser,\r\n    users: users,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(SiteWrapper));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport { Text } from \"tabler-react\";\r\nimport SiteWrapper from \"./SiteWrapper\";\r\nimport { Button, Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst RESULTS = \"results\";\r\nconst POLL = \"poll\";\r\nconst ANSWERED = \"answered\";\r\nconst UNANSWERED = \"unanswered\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    questionList: UNANSWERED,\r\n  };\r\n\r\n  changeQuestionList = (e) => {\r\n    if (!e.target.textContent.toLowerCase().includes(UNANSWERED)) {\r\n      this.setState({ questionList: ANSWERED });\r\n    } else {\r\n      this.setState({ questionList: UNANSWERED });\r\n    }\r\n  };\r\n  render() {\r\n    const { questions, users, setAuthedUser, answered, unanswered } =\r\n      this.props;\r\n    console.log(\"home page: \", this.props);\r\n\r\n    //redirect to Login page if not logged in\r\n    if (!setAuthedUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <SiteWrapper>\r\n        <Container>\r\n          <Row>\r\n            <Col lg={6}>\r\n              <Button\r\n                aria-selected={\r\n                  this.state.questionList === UNANSWERED ? \"true\" : \"false\"\r\n                }\r\n                className=\"btn-primary btn-block mb-4\"\r\n                onClick={this.changeQuestionList}\r\n              >\r\n                Unanswered questions\r\n              </Button>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Button\r\n                aria-selected={\r\n                  this.state.questionList === ANSWERED ? \"true\" : \"false\"\r\n                }\r\n                onClick={this.changeQuestionList}\r\n                className=\"btn-primary btn-block mb-4 btn\"\r\n              >\r\n                Answered Questions\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {(this.state.questionList === UNANSWERED\r\n              ? unanswered\r\n              : answered\r\n            ).map((answer) => (\r\n              <Col key={questions[answer].id} lg={12} xs={12} sm={12} md={12}>\r\n                <Card className=\"card card-profile\">\r\n                  <div className=\"card-profile text-center bg-dark\">\r\n                    <Text className=\"h3 text-white mx-auto mb-5 mt-5\">\r\n                      {users[questions[answer].author].name}\r\n                    </Text>\r\n                  </div>\r\n                  <Card.Body className=\"card-body\">\r\n                    <img\r\n                      src={users[questions[answer].author].avatarURL}\r\n                      alt=\"avatar\"\r\n                      className=\"card-profile-img\"\r\n                    />\r\n                    <h3 className=\"text-left mb-3\">Would you rather</h3>\r\n                    <p className=\"mb-4 h5 text-center\">\r\n                      ...{questions[answer].optionOne.text}...\r\n                    </p>\r\n                    <br />\r\n                    <p className=\"mb-4 text-center\">\r\n                      <span className=\"bg-dark text-white text-center\">OR</span>\r\n                    </p>\r\n                    <div className=\"ml-auto text-muted\">\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/question/${answer}`,\r\n                          state: {\r\n                            type:\r\n                              this.state.questionList === UNANSWERED\r\n                                ? POLL\r\n                                : RESULTS,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Button color=\"primary\" size=\"md\">\r\n                          ANSWER\r\n                        </Button>\r\n                      </Link>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ setAuthedUser, users, questions }) {\r\n  let answered, unanswered;\r\n  const sort = (a, b) => {\r\n    return (\r\n      new Date(questions[b].timestamp).getTime() -\r\n      new Date(questions[a].timestamp).getTime()\r\n    );\r\n  };\r\n  if (setAuthedUser) {\r\n    answered = Object.keys(users[setAuthedUser].answers).sort(sort);\r\n    unanswered = Object.keys(Object.assign({}, questions)).sort(sort);\r\n    answered.map(\r\n      (answer) =>\r\n        (unanswered = unanswered.filter((unanswered) => answer !== unanswered))\r\n    );\r\n  }\r\n  return {\r\n    setAuthedUser,\r\n    users,\r\n    questions,\r\n    answered,\r\n    unanswered,\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(HomePage));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, FormGroup } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"@restart/ui/esm/Button\";\r\nimport { handleSaveAnswer } from \"../actions/shared\";\r\n\r\nclass PollQuestionAnswer extends Component {\r\n  state = {\r\n    option: \"none\",\r\n    error: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      option: e.target.value,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { option } = this.state;\r\n    const { dispatch, question } = this.props;\r\n\r\n    this.state.option === \"none\"\r\n      ? this.setState({ error: true })\r\n      : dispatch(handleSaveAnswer(question.id, option));\r\n  };\r\n  render() {\r\n    const { question } = this.props;\r\n    return (\r\n      <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label className=\"text-muted\">Choose one option</Form.Label>\r\n          {this.state.error && (\r\n            <small className=\"text-danger p-4\">please select one option</small>\r\n          )}\r\n\r\n          <Form.Switch\r\n            label={question.optionOne.text}\r\n            name=\"choice\"\r\n            type=\"radio\"\r\n            value=\"optionOne\"\r\n            className=\"pf-auto\"\r\n          />\r\n          <Form.Switch\r\n            label={question.optionTwo.text}\r\n            name=\"choice\"\r\n            type=\"radio\"\r\n            value=\"optionTwo\"\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          className=\"btn-primary btn-block btn\"\r\n          type=\"submit\"\r\n          value=\"submit answer\"\r\n        >\r\n          Submit Answer\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(PollQuestionAnswer);\r\n","import React, { Component } from \"react\";\r\nimport { ProgressBar, Progress } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Text } from \"tabler-react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass PollQuestionResult extends Component {\r\n  render() {\r\n    const { question, authedUser } = this.props;\r\n    const { optionOne, optionTwo } = question;\r\n    const totalVotes = optionOne.votes.length + optionTwo.votes.length;\r\n    const selected = optionOne.votes.includes(authedUser);\r\n    const percent1 = (optionOne.votes.length / totalVotes) * 100;\r\n    const percent2 = (optionTwo.votes.length / totalVotes) * 100;\r\n    console.log(\"total vote\", totalVotes);\r\n    console.log(\"result pages\", this.props);\r\n    return (\r\n      <div className=\"text-left\">\r\n        <div className={`question-result mb-4 ${selected}`}>\r\n          <div className=\"clearfix\">\r\n            <div className=\"float-right\">\r\n              <Text.Small muted>\r\n                {optionOne.votes.length} out of {totalVotes} votes\r\n              </Text.Small>\r\n            </div>\r\n          </div>\r\n          <ProgressBar\r\n            label={`${percent1}%`}\r\n            now={percent1.toFixed(0)}\r\n            variant=\"info\"\r\n          />\r\n          <h4>{optionOne.text}</h4>\r\n        </div>\r\n        <div className={`question-result mb-4 ${!selected}`}>\r\n          <div className=\"clearfix\">\r\n            <div className=\"float-right\">\r\n              <Text.Small muted>\r\n                {optionTwo.votes.length} out of {totalVotes} votes\r\n              </Text.Small>\r\n            </div>\r\n          </div>\r\n          <ProgressBar\r\n            now={percent2.toFixed(0)}\r\n            label={`${percent2}%`}\r\n            variant=\"info\"\r\n          />\r\n          <h4>{optionTwo.text}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(PollQuestionResult);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SiteWrapper from \"./SiteWrapper\";\r\nimport { Page, Text } from \"tabler-react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PollQuestionAnswer from \"./PollQuestionAnswer\";\r\nimport PollQuestionResult from \"./PollQuestionResult\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@restart/ui/esm/Button\";\r\n\r\nclass PollQuestion extends Component {\r\n  render() {\r\n    const { setAuthedUser, users, question } = this.props;\r\n    console.log(\"Poll question: \", this.props);\r\n\r\n    const questionAnswered = Object.keys(users[setAuthedUser].answers).includes(\r\n      question.id\r\n    );\r\n\r\n    // console.log(\"answer: \", questionAnswered);\r\n    return (\r\n      <SiteWrapper>\r\n        <Page.Content>\r\n          <Card className=\"card card-profile\">\r\n            <div className=\"card-header bg-dark text-center\">\r\n              <Text className=\"h3 text-white mx-auto mb-5\">\r\n                {users[question.author].name}\r\n              </Text>\r\n            </div>\r\n            <Card.Body className=\"card-body text-center\">\r\n              <img\r\n                src={users[question.author].avatarURL}\r\n                className=\"card-profile-img\"\r\n                alt=\"\"\r\n              />\r\n              <h3 className=\"mb-3 text-left\">Would you rather ...</h3>\r\n              {questionAnswered ? (\r\n                <PollQuestionResult\r\n                  question={question}\r\n                  author={users[question.author]}\r\n                  authedUser={setAuthedUser}\r\n                />\r\n              ) : (\r\n                <PollQuestionAnswer\r\n                  question={question}\r\n                  author={users[question.author]}\r\n                  authedUser={setAuthedUser}\r\n                />\r\n              )}\r\n              {questionAnswered && (\r\n                <div className=\"ml-auto text-muted\">\r\n                  <Link to={\"/\"}>\r\n                    <Button color=\"primary\" size=\"md\">\r\n                      Return to HomePage\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Page.Content>\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ setAuthedUser, users, questions }, props) {\r\n  return {\r\n    setAuthedUser,\r\n    users,\r\n    question: questions[props.match.params.id],\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollQuestion);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SiteWrapper from \"./SiteWrapper\";\r\nimport { Page, Text } from \"tabler-react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { handleAddQuestion } from \"../actions/shared\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass PollQuestionNew extends Component {\r\n  state = {\r\n    optionOneText: \"\",\r\n    optionTwoText: \"\",\r\n    redirect: false,\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { optionOneText, optionTwoText } = this.state;\r\n\r\n    this.props.dispatch(handleAddQuestion(optionOneText, optionTwoText));\r\n    this.setState({ redirect: true });\r\n  };\r\n\r\n  render() {\r\n    const { authedUser, users } = this.props;\r\n    console.log(\"New question: \", this.props);\r\n\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <SiteWrapper>\r\n        <Page.Content>\r\n          <Card className=\"card card-profile\">\r\n            <div className=\"card-header bg-dark text-center\">\r\n              <Text className=\"h3 text-white mx-auto mb-5\">\r\n                {users[authedUser].name}\r\n              </Text>\r\n            </div>\r\n            <Card.Body className=\"card-body text-center\">\r\n              <img\r\n                alt=\"=\"\r\n                src={users[authedUser].avatarURL}\r\n                className=\"card-profile-img\"\r\n              />\r\n\r\n              <h3 className=\"mb-3 text-left text-muted\">Would you rather...</h3>\r\n\r\n              <form onSubmit={this.handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Option one...\"\r\n                    onChange={(e) =>\r\n                      this.setState({ optionOneText: e.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"bg-light mb-3\">\r\n                  <Form.Text className=\"text-dark\">OR</Form.Text>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Option Two...\"\r\n                    onChange={(e) =>\r\n                      this.setState({ optionTwoText: e.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={\r\n                    this.state.optionOneText === \"\" ||\r\n                    this.state.optionTwoText === \"\"\r\n                  }\r\n                >\r\n                  Ask Question\r\n                </Button>\r\n              </form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Page.Content>\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ users, questions, setAuthedUser }) {\r\n  return {\r\n    authedUser: setAuthedUser,\r\n    questions,\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollQuestionNew);\r\n","import React, { Component } from \"react\";\r\nimport { Badge, Card, Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport SiteWrapper from \"./SiteWrapper\";\r\nimport { Text } from \"tabler-react\";\r\n\r\nclass Leaderboard extends Component {\r\n  render() {\r\n    const { questions, users } = this.props;\r\n    console.log(\"leaderboard: \", this.props);\r\n    return (\r\n      <SiteWrapper>\r\n        <Card className=\"card card-profile\">\r\n          <Card.Header>\r\n            <Card.Title>Leaderboard</Card.Title>\r\n          </Card.Header>\r\n          <Table className=\"table-vcenter\" striped bordered>\r\n            <thead className=\"text-center\">\r\n              <tr>\r\n                <th>SCORE</th>\r\n                <th>USER</th>\r\n                <th>ANSWERED QUESTIONS</th>\r\n                <th>CREATED QUESTIONS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.values(users).map((user, index) => (\r\n                <tr key={user.id}>\r\n                  <th>\r\n                    <Badge color=\"warning\">\r\n                      <Text className=\"my-0 mx-1\">\r\n                        {Object.keys(user.answers).length +\r\n                          user.questions.length}\r\n                      </Text>\r\n                    </Badge>\r\n                  </th>\r\n                  <th>{user.name}</th>\r\n                  <th className=\"text-center\">\r\n                    {Object.keys(user.answers).length}\r\n                  </th>\r\n                  <th className=\"text-center\">{user.questions.length}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Card>\r\n      </SiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions, users }) {\r\n  return {\r\n    questions,\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard);\r\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Login from \"./Login\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { LoadingBar } from \"react-redux-loading\";\nimport HomePage from \"./HomePage\";\nimport PollQuestion from \"./PollQuestion\";\nimport PollQuestionNew from \"./PollQuestionNew\";\nimport Leaderboard from \"./Leaderboard\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      props.authedUser !== null ? <Component {...props} /> : <Login />\n    }\n  />\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData());\n  }\n  render() {\n    console.log(\"app: \", this.props);\n    return (\n      <Router>\n        <Fragment>\n          <LoadingBar />\n          {!this.props.loading && (\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route path=\"/login\" component={Login} />\n              <PrivateRoute\n                exact\n                path=\"/question/:id\"\n                component={PollQuestion}\n              />\n              <PrivateRoute exact path=\"/add\" component={PollQuestionNew} />\n              <PrivateRoute exact path=\"/leaderboard\" component={Leaderboard} />\n            </Switch>\n          )}\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps({ setAuthedUser, questions, users }) {\n  if (users && setAuthedUser) {\n    const unansweredIds = [];\n    const answeredIds = Object.keys(users[setAuthedUser].answers);\n    const questionsId = Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    );\n\n    questionsId.map(\n      (id) => answeredIds.includes(id) === false && unansweredIds.push(id)\n    );\n    answeredIds.sort((a, b) => questions[b] - questions[a]);\n    return {\n      authedUser: setAuthedUser,\n      answeredIds,\n      unansweredIds,\n      loading: questions === null,\n    };\n  }\n  return {\n    authedUser: setAuthedUser,\n    loading: questions === null,\n  };\n}\n\n// function mapStateToProps({ questions, setAuthedUser }) {\n//   return {\n//     authedUser: setAuthedUser,\n//     loading: questions === null,\n//     loggedIn: setAuthedUser !== null,\n//   };\n// }\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport users from \"./users\";\r\nimport questions from \"./questions\";\r\nimport setAuthedUser from \"./authedUser\";\r\n\r\nexport default combineReducers({\r\n  setAuthedUser,\r\n  users,\r\n  questions,\r\n});\r\n","import { SET_AUTHED_USER } from \"../actions/authedUser\";\r\n\r\nexport default function setAuthedUser(state = null, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHED_USER:\r\n      return action.id;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_USERS,\r\n  SAVE_ANSWER_TO_AUTHED_USER,\r\n  SAVE_QUESTION_TO_AUTHED_USER,\r\n} from \"../actions/users\";\r\n\r\nexport default function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users,\r\n      };\r\n\r\n    case SAVE_QUESTION_TO_AUTHED_USER:\r\n      const { authedUser, id } = action;\r\n      return {\r\n        ...state,\r\n        [authedUser]: {\r\n          ...state[authedUser],\r\n          questions: state[authedUser].questions.concat(id),\r\n        },\r\n      };\r\n\r\n    case SAVE_ANSWER_TO_AUTHED_USER:\r\n      const { answer } = action;\r\n      return {\r\n        ...state,\r\n        [action.authedUser]: {\r\n          ...state[action.authedUser],\r\n          answers: {\r\n            ...state[action.authedUser].answers,\r\n            [action.id]: answer,\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_QUESTION,\r\n  RECEIVE_QUESTIONS,\r\n  SAVE_ANSWER,\r\n} from \"../actions/questions\";\r\n\r\nexport default function questions(state = {}, action) {\r\n  const { id, answer, authedUser, question } = action;\r\n  switch (action.type) {\r\n    case RECEIVE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions,\r\n      };\r\n\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        [question.id]: question,\r\n      };\r\n\r\n    case SAVE_ANSWER:\r\n      return {\r\n        ...state,\r\n        [id]: {\r\n          ...state[id],\r\n          [answer]: {\r\n            ...state[id][answer],\r\n            votes: state[id][answer].votes.concat(authedUser),\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n  console.log(\"The action\", action);\r\n  const result = next(action);\r\n  console.log(\"The new state: \", store.getState());\r\n  console.groupEnd();\r\n  return result;\r\n};\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport default applyMiddleware(thunk, logger);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = createStore(reducer, middleware);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}